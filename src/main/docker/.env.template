# Variables in this file will be substituted into docker-compose.yml
# Save a copy of this file as .env and insert your own values.
# Verify correct substitution with "docker-compose config"
# If variables are newly added or enabled, please delete and rebuild the images to pull in changes

# The hostname where the service will be deployed
# If different from localhost, a SSL certificate will be requested for this domain, 
# so make sure the machine can be reached from the Internet using this hostname
SERVICE_DOMAIN=localhost

# On AWS, your SERVICE_URL is the output of:
# curl -s http://169.254.169.254/latest/meta-data/public-hostname
# SERVICE_URL=http://ec2-xxx-xxx-xxx-xxx.ap-southeast-2.compute.amazonaws.com
# On OSX with Docker for Mac, your SERVICE_URL is
# SERVICE_URL=http://docker.for.mac.localhost:8080
# When running locally, SERVICE_URL must contain the port
SERVICE_PORT=8080
SERVICE_URL=http://localhost:${SERVICE_PORT}
QUARKUS_HTTP_PORT=${SERVICE_PORT}

# Email used to obtain SSL certificate
SERVICE_EMAIL=levente.farkas@egi.eu


####################################################################################################
## EGI File Transfer                                                                              ##
####################################################################################################

# Password for (optional) keystore of EGI FTS service
FTS_KEY_STORE_PASSWORD=password


####################################################################################################
## Telemetry                                                                                      ##
####################################################################################################

# Jaeger
JAEGER_SERVICE_PORT=16686
JAEGER_COLLECTOR_PORT=4319
JAEGER_SERVICE_HOST=jaeger

# Prometheus
PROMETHEUS_SERVICE_PORT=9090
PROMETHEUS_SERVICE_HOST=prometheus
PROMETHEUS_ADDR=${PROMETHEUS_SERVICE_HOST}:9090

# Loki
LOKI_COLLECTOR_PORT=3100
LOKI_SERVICE_HOST=loki
LOKI_ADDR=${LOKI_SERVICE_HOST}:3100

# Grafana
GRAFANA_SERVICE_PORT=3000
GRAFANA_SERVICE_HOST=grafana

# OpenTelemetry Collector
OTEL_COLLECTOR_HOST=otelcol
OTEL_COLLECTOR_PORT=4317
OTEL_COLLECTOR_ADDR=${OTEL_COLLECTOR_HOST}:4317
OTEL_EXPORTER_OTLP_ENDPOINT=http://${OTEL_COLLECTOR_ADDR}
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces

# Exporter protocol configuration
OTEL_TRACES_EXPORTER=otlp
OTEL_METRICS_EXPORTER=otlp
OTEL_LOGS_EXPORTER=otlp

# OpenTelemetry Resource Definitions
OTEL_RESOURCE_ATTRIBUTES="service.namespace=eosc"

# Metrics Temporality
OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE=cumulative
